{"name":"Grunt-docco-multi","tagline":"working grunt Docco task to create full site","body":"[![build status](https://secure.travis-ci.org/abovethewater/grunt-docco-multi.png)](http://travis-ci.org/abovethewater/grunt-docco-multi)\r\n# grunt-docco-multi\r\n\r\n**Grab your markdown comments in your CoffeeScript through [Docco](http://jashkenas.github.io/docco/).**\r\n\r\nDiffers to grunt-docco in that all files are parsed as one, provide a nice jump-to menu in the output.\r\n\r\nThis may be a feature in grunt-docco, but that didn't just work out the box\r\n\r\n## Installation\r\n\r\nInstall npm package, next to your project's Gruntfile:\r\n\r\n    npm install --save-dev grunt-docco-multi\r\n\r\nAdd this line to your project's Gruntfile:\r\n\r\n    grunt.loadNpmTasks('grunt-docco-multi');\r\n\r\n\r\n## Configuration\r\n\r\n`docco` is a multitask, so you can use it similary to `lint`, `watch` etc...\r\n\r\n\r\n  grunt.initConfig\r\n\r\n    ...\r\n\r\n    docco:\r\n\r\n      # ## use current sane defaults\r\n      options:\r\n        layout : \"parallel\"\r\n        output : \"docs/\"\r\n\r\n      # ## parse multiple files\r\n      all:\r\n        files:\r\n          src: ['test/fixtures/*.coffee']\r\n\r\n      # ## parse a single file\r\n      single:\r\n        files:\r\n          src: ['test/fixtures/valid.litcoffee']\r\n\r\n      # ## parse this file with linear output\r\n      gruntfile:\r\n        options:\r\n          layout: \"linear\"\r\n        files:\r\n          src: 'Gruntfile.coffee'\r\n\r\n      # ## nothing to parse\r\n      empty: '404.coffee'\r\n\r\n    ...\r\n\r\n### Options\r\n\r\nStandard `docco` options are supported\r\n\r\n    config:\r\n        layout:     'parallel'\r\n        output:     'docs/'\r\n        template:   null\r\n        css:        null\r\n        extension:  null\r\n\r\n\r\nlicensed under the [MIT](http://abovethewater.mit-license.org) licence\r\n(&copy;) 2013 abovethewater\r\n","google":"UA-42074273-1","note":"Don't delete this file! It's used internally to help with page regeneration."}